{"ast":null,"code":"import _classCallCheck from \"/home/satraan/judge-tools/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/satraan/judge-tools/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/satraan/judge-tools/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/satraan/judge-tools/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/satraan/judge-tools/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/satraan/judge-tools/src/Sources/Sources.js\";\nimport React, { Component } from 'react';\nimport SourceCounter from '../SourceCounter/SourceCounter';\n\nvar Sources =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Sources, _Component);\n\n  function Sources() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Sources);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Sources)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      white: {\n        color: \"white\",\n        required: 0,\n        present: 0\n      },\n      blue: {\n        color: \"blue\",\n        required: 0,\n        present: 2\n      },\n      black: {\n        color: \"black\",\n        required: 0,\n        present: 0\n      },\n      red: {\n        color: \"red\",\n        required: 0,\n        present: 0\n      },\n      green: {\n        color: \"green\",\n        required: 0,\n        present: 0\n      }\n    };\n\n    _this.addSource = function () {\n      _this.setState({});\n    };\n\n    return _this;\n  }\n\n  _createClass(Sources, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"ui container main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(SourceCounter, {\n        classes: \"ui button white\",\n        required: this.state.white.present,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(SourceCounter, {\n        classes: \"ui button blue\",\n        required: this.state.blue.present,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(SourceCounter, {\n        classes: \"ui button black\",\n        required: this.state.black.present,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(SourceCounter, {\n        classes: \"ui button red\",\n        required: this.state.red.present,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(SourceCounter, {\n        classes: \"ui button green\",\n        required: this.state.green.present,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addSource,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Add global\"));\n    }\n  }]);\n\n  return Sources;\n}(Component);\n\nexport default Sources;","map":{"version":3,"sources":["/home/satraan/judge-tools/src/Sources/Sources.js"],"names":["React","Component","SourceCounter","Sources","state","white","color","required","present","blue","black","red","green","addSource","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;IAGMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,QAAQ,EAAC,CAAzB;AAA4BC,QAAAA,OAAO,EAAC;AAApC,OADH;AAEJC,MAAAA,IAAI,EAAE;AAACH,QAAAA,KAAK,EAAC,MAAP;AAAeC,QAAAA,QAAQ,EAAC,CAAxB;AAA2BC,QAAAA,OAAO,EAAC;AAAnC,OAFF;AAGJE,MAAAA,KAAK,EAAE;AAACJ,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,QAAQ,EAAC,CAAzB;AAA4BC,QAAAA,OAAO,EAAC;AAApC,OAHH;AAIJG,MAAAA,GAAG,EAAE;AAACL,QAAAA,KAAK,EAAC,KAAP;AAAcC,QAAAA,QAAQ,EAAC,CAAvB;AAA0BC,QAAAA,OAAO,EAAC;AAAlC,OAJD;AAKJI,MAAAA,KAAK,EAAE;AAACN,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,QAAQ,EAAC,CAAzB;AAA4BC,QAAAA,OAAO,EAAC;AAApC;AALH,K;;UAQNK,S,GAAY,YAAM;AAChB,YAAKC,QAAL,CAAc,EAAd;AAGD,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAC,iBAAvB;AAAyC,QAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWC,KAAX,CAAiBG,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAC,gBAAvB;AAAwC,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,IAAX,CAAgBD,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAC,iBAAvB;AAAyC,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWM,KAAX,CAAiBF,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAC,eAAvB;AAAuC,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWO,GAAX,CAAeH,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAC,iBAAvB;AAAyC,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWQ,KAAX,CAAiBJ,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE;AAAQ,QAAA,OAAO,EAAE,KAAKK,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,CADF;AAWD;;;;EA3BiBZ,S;;AA8BtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport SourceCounter from '../SourceCounter/SourceCounter';\n\n\nclass Sources extends Component {\n  state = {\n      white: {color:\"white\", required:0, present:0},\n      blue: {color:\"blue\", required:0, present:2},\n      black: {color:\"black\", required:0, present:0},\n      red: {color:\"red\", required:0, present:0},\n      green: {color:\"green\", required:0, present:0}\n    }\n\n    addSource = () => {\n      this.setState({\n\n      })\n    }\n\n    render() {\n      return (\n        <div className=\"ui container main\">\n          <SourceCounter classes=\"ui button white\" required={this.state.white.present}/>\n          <SourceCounter classes=\"ui button blue\" required={this.state.blue.present}/>\n          <SourceCounter classes=\"ui button black\" required={this.state.black.present}/>\n          <SourceCounter classes=\"ui button red\" required={this.state.red.present}/>\n          <SourceCounter classes=\"ui button green\" required={this.state.green.present}/>\n          <hr/>\n          <button onClick={this.addSource}>Add global</button>\n        </div>\n      );\n    }\n}\n\nexport default Sources;\n"]},"metadata":{},"sourceType":"module"}